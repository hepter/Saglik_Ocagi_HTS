<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
</root>